// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlaZe_Client.Pages.Cars
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using BlaZe_Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using BlaZe_Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using BlaZe_Client.Helper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Common;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using BlaZe_Client.Model.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using BlaZe_Client.Service.IService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\Work\BlaZe\BlaZe\BlaZe_Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/cars")]
    public partial class CarsPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 74 "D:\Work\BlaZe\BlaZe\BlaZe_Client\Pages\Cars\CarsPage.razor"
               
    private HomeVM HomeModel { get; set; } = new HomeVM();
        public IEnumerable<CarDTO> Cars { get; set; } = new List<CarDTO>();
        private bool IsProcessing { get; set; } = false;

        private int manualCarouselIters = 3;
        private string orderBy;
        public string OrderBy { get => orderBy; set { orderBy = value; ReOrder(); } }

        protected override async Task OnInitializedAsync()
        {
            try
            {
                HomeModel = await localStorage.GetItemAsync<HomeVM>(Static.initDates);
                if (HomeModel == null)
                {
                    HomeModel.noOfDays = 1;
                }
                await LoadCars();
                StartCarousels(); // not awaited on purpose
            }
            catch (Exception e)
            {
                await jsRuntime.ToasterFail(e.Message);
            }
        }

        private async Task LoadCars()
        {
            Cars = await carService.GetCars(HomeModel.StartDate.ToString("MM/dd/yyyy"), HomeModel.EndDate.ToString("MM/dd/yyyy"));

            foreach (var car in Cars)
            {
                car.TotalDays = HomeModel.noOfDays;
                car.TotalPrice = car.Price * car.TotalDays;
            }
            StateHasChanged();
        }

        private async Task SaveRentInfo()
        {
            IsProcessing = true;
            HomeModel.EndDate = HomeModel.StartDate.AddDays(HomeModel.noOfDays);
            await localStorage.SetItemAsync(Static.initDates, HomeModel);
            await LoadCars();
            IsProcessing = false;
        }

        private async void ReOrder()
        {
            switch (OrderBy)
            {
                case Static.OrderBy_Name:
                    {
                        Cars = Cars.OrderBy(o => o.Name).ToList();
                        break;
                    }
                case Static.OrderBy_Price:
                    {
                        Cars = Cars.OrderBy(o => o.TotalPrice).ToList();
                        break;
                    }
                case Static.OrderBy_Availability:
                    {
                        Cars = Cars.OrderBy(o => o.IsRented).ToList();
                        break;
                    }
            }
            await jsRuntime.InvokeVoidAsync("ResetCarousel", "doesntMatter");
            StateHasChanged();
        }

        private async Task StartCarousels()
        {
            for (int i = 0; i < manualCarouselIters; i++)
            {
                await Task.Delay(5000);
                foreach (var car in Cars)
                {
                    await Task.Delay(500);
                    await jsRuntime.InvokeVoidAsync("ClickMe", "carouselNext" + car.Id);
                }
            }
        }
        

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICarService carService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocalStorageService localStorage { get; set; }
    }
}
#pragma warning restore 1591
